name: 'Building a data solution'
description: 'Compiles and build a dotnet core solution with data components'
inputs:
  configuration:
    description: 'Build configuration to use'
    required: true
    default: 'Release'
  solution:
    description: 'The path where to look for the solution'
    required: true
  outputpath:
    description: 'The output folder where assets will be generated if any'
    required: true
outputs:
  package:
    description: "File name of the generated package"
    value: ${{ steps.dotnet-build.outputs.packagename }}
  dacpath:
    description: "File name of the generated package"
    value: ${{ steps.dotnet-build.outputs.dacpath }}  
runs:
  using: "composite"
  steps:
    # - name: Installing dotnet
    #   shell: bash
    #   run: |
    #     if ! type dotnet > /dev/null; then
    #       echo "::debug::dotnet is not available. Installing dotnet 5."

    #       sudo apt-get update; \
    #         sudo apt-get install -y apt-transport-https && \
    #         sudo apt-get update && \
    #         sudo apt-get install -y dotnet-sdk-5.0
    #     else
    #       echo "::debug::dotnet is already installed."
    #     fi
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    # - name: Installing SQL Data Tools
    #   shell: bash
    #   run: |
    #     if test -f "azuredatastudio"; then
    #       echo "::debug::Azure Data Studio already installed in the context"
    #     else
    #       echo "::debug::Azure Data Studio is not available. Downloading and installing."

    #       sudo apt-get install libunwind8
    #       wget -progress=bar:force -q -O azuredatastudio-linux.deb https://go.microsoft.com/fwlink/?linkid=2168339 \
    #         && sudo dpkg -i azuredatastudio-linux.deb \
    #         && rm azuredatastudio-linux.deb
    #     fi

    - id: dotnet-build
      name: Building solution
      shell: bash
      run: |
        
        dotnet build ${{ inputs.solution }} \
          -p:Configuration=${{ inputs.configuration }} \
          -p:OutputPath=${{ inputs.outputpath }}
        dacpath=${{ inputs.outputpath }}
        PACKAGE_NAME=$(find ${ARTIFACTS_PATH} -name '*.dacpac' -exec basename {} \;)
        echo "::debug::The following package(s) have been built: $PACKAGE_NAME"
        echo "::set-output name=packagename::$PACKAGE_NAME"
        echo "::set-output name=dacpath::$dacpath"
    # - name: Add msbuild to PATH
    #   uses: microsoft/setup-msbuild@v1.0.3

    # - id: dotnet-build
    #   name: Build Database project
    #   shell: bash
    #   run: |
    #       msbuild.exe -H
    #       msbuild.exe ${{ inputs.solution }} -p:OutDir=${{ inputs.outputpath }} -p:Configuration=${{ inputs.configuration }}

    #       PACKAGE_NAME=$(find ${ARTIFACTS_PATH} -name '*.dacpac' -exec basename {} \;)
    #       echo "::debug::The following package(s) have been built: $PACKAGE_NAME"
    #       echo "::set-output name=packagename::$PACKAGE_NAME"

