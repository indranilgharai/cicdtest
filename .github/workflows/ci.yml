name: CI

on:
    pull_request:
        branches:
            - main
            - develop
            - uat
            - sit

    workflow_dispatch:
      inputs:
        selected_commit:
          description: 'Select commit(s) to merge (Enter commit hash or "all" for all commits)'
          required: false
concurrency:
    group: ci-on-branch-${{ github.head_ref }}
    cancel-in-progress: true

jobs:
  Select-Commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Display commit list
        run: git log --pretty=format:"%h - %an, %ar :%s" -100
        id: commit-list

      - name: Set commit selection
        id: commit-selector
        run: |
          echo "::set-output name=selected_commit::$(echo '${{ steps.commit-list.outputs.stdout }}' | fzf | awk '{print $1}')"
        shell: bash
        env:
          FZF_DEFAULT_OPTS: '--ansi'

  Merge-Commits:
    runs-on: ubuntu-latest
    needs: Select-Commits
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge selected commit to current branch
        run: |
          git fetch origin develop uat sit main
          git checkout ${{ github.event.pull_request.base.ref }}
          
          if [[ "${{ needs.Select-Commits.outputs.selected_commit }}" == "all" ]]; then
            git merge --no-ff ${{ github.event.pull_request.head.ref }}
          else
            IFS=',' read -ra commits <<< "${{ needs.Select-Commits.outputs.selected_commit }}"
            for commit in "${commits[@]}"; do
              git merge --no-ff $commit
            done
          fi
          
          git push origin ${{ github.event.pull_request.base.ref }}
        shell: bash
